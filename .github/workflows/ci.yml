zname: CI

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  tests:
    name: ðŸ§ª Python Tests
    runs-on: ubuntu-24.04
    strategy:
      matrix:
      
        # Lower bound and latest Python stable
        python-version: ['3.9', '3.13']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: make poetry-download

      - name: Set up cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install

      - name: Run tests with coverage
        run: |
          # Run pytest with coverage so htmlcov/ is always created
          poetry run pytest --cov=your_package --cov-report=term-missing --cov-report=html

      - name: Archive Coverage Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-report-${{ matrix.python-version }}
          path: htmlcov
          retention-days: 5


  # ----------------------------------------------------
  # OPTIONAL: Dependency submission to GitHub Dependency Graph
  # ----------------------------------------------------
  submit-python-dependencies:
    name: ðŸ“¦ Submit Python Dependencies
    runs-on: ubuntu-latest
    if: github.repository_owner == 'Pray4Love1'  # optional: only run in your repo

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Export dependencies to requirements.txt
        run: poetry export --without-hashes --format=requirements.txt > requirements.txt

      - name: Submit dependencies to GitHub Dependency Graph
        uses: github/dependency-submission-action@v1
        with:
          requirements: requirements.txt
