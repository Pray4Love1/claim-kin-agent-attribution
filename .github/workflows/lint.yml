name: CI

on:
  push:
    branches:
      - master
      - main
      - evm
      - release/**
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:

  # -------------------------------
  # 1. Linting with pre-commit
  # -------------------------------
  lint:
    name: ðŸ§¹ Lint (pre-commit)
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: make poetry-download

      - name: Set up cache
        uses: actions/cache@v4
        with:
          path: |
            .venv
            ~/.cache/pre-commit
          key: lint-venv-3.10-${{ hashFiles('poetry.lock') }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          make install

      - name: Run pre-commit hooks
        run: make pre-commit


  # ---------------------------------------
  # 2. Python tests (multi-version matrix)
  # ---------------------------------------
  test:
    name: ðŸ§ª Python Tests
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ['3.9', '3.13']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: make poetry-download

      - name: Set up cache
        uses: actions/cache@v4
        with:
          path: .venv
          key: test-venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install

      - name: Run tests
        run: make test

      - name: Archive Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-${{ matrix.python-version }}
          path: htmlcov
          retention-days: 5


  # -------------------------------
  # 3. Foundry: Forge build & test
  # -------------------------------
  forge:
    name: ðŸ”¨ Forge Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Forge Build
        id: forge-build
        run: |
          forge --version
          forge build --evm-version=prague

      - name: Forge Tests
        id: forge-test
        run: |
          forge test -vvv --evm-version=prague
